@page "/"
@using Logic
@inject NavigationManager Navigation

<div class="lobby-container">
    <h1 class="lobby-title">Game Lobby</h1>

    <div class="create-section">
        <h2>Create a New Game</h2>
        <div class="create-form">
            <input @bind="hostPlayerName" placeholder="Enter your name" class="input-name" />
            <button @onclick="CreateGame" class="btn-create">Create Game</button>
        </div>
    </div>

    <div class="available-section">
        <h2>Available Games</h2>
        @if (GameService.LobbyGames.Any())
        {
            <ul class="game-list">
                @foreach (var game in GameService.LobbyGames)
                {
                    <li class="game-item">
                        <div class="game-info">
                            <p><strong>Game ID:</strong> @game.SessionId</p>
                            <p><strong>Host:</strong> @game.Player1.Name</p>
                            <p><strong>Status:</strong> @(game.Player2 == null ? "Waiting for player..." : "Ready to start")</p>
                        </div>
                        @if (game.Player2 == null)
                        {
                            <input @bind="joinPlayerName" placeholder="Your name" class="input-name" />
                            <button @onclick="() => JoinGame(game.SessionId)" class="btn-join">Join</button>
                        }
                    </li>
                }
            </ul>
        }
        else
        {
            <p class="no-games-message">No games available in the lobby.</p>
        }
    </div>

    <button class="btn-highscores" @onclick="GoToHighScores">View High Scores</button>
</div>

<style>
    .lobby-container {
        background: linear-gradient(to bottom, #1f1010, #000000);
        height: 100vh;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: #ffffff;
    }

    .lobby-title {
        font-size: 3rem;
        color: #ff4d4d;
        text-shadow: 0 0 10px #ff4d4d, 0 0 30px #990000;
        margin-bottom: 30px;
        text-align: center;
    }

    .create-section, .available-section {
        background: rgba(255, 0, 0, 0.1);
        border: 2px solid #ff4d4d;
        border-radius: 15px;
        padding: 20px;
        box-shadow: 0 0 20px rgba(255, 0, 0, 0.8);
        margin-bottom: 30px;
        width: 90%;
        max-width: 500px;
    }

    .create-section h2, .available-section h2 {
        font-size: 1.5rem;
        color: #ff4d4d;
        margin-bottom: 15px;
    }

    .input-name {
        width: calc(100% - 20px);
        padding: 10px;
        border: 2px solid #ff4d4d;
        border-radius: 5px;
        font-size: 1rem;
        color: #ffffff;
        background: #1a1a1a;
        box-shadow: inset 0 0 5px rgba(255, 0, 0, 0.5);
    }

    .btn-create, .btn-join {
        display: block;
        width: 100%;
        padding: 10px;
        font-size: 1.2rem;
        font-weight: bold;
        color: #ffffff;
        border: none;
        border-radius: 5px;
        background: linear-gradient(to right, #ff4d4d, #990000);
        cursor: pointer;
        margin-top: 10px;
        box-shadow: 0 0 15px rgba(255, 0, 0, 0.7);
        transition: transform 0.3s, background 0.3s;
    }

    .btn-create:hover, .btn-join:hover {
        transform: scale(1.05);
        background: linear-gradient(to right, #ff8080, #cc0000);
    }

    .game-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .game-item {
        background: rgba(255, 0, 0, 0.2);
        border: 2px solid #ff4d4d;
        border-radius: 10px;
        padding: 15px;
        margin-bottom: 15px;
        color: #ffffff;
    }

    .game-info p {
        margin: 5px 0;
        font-size: 1rem;
    }

    .no-games-message {
        font-size: 1.2rem;
        color: #ff4d4d;
        text-align: center;
        text-shadow: 0 0 5px #ff4d4d;
    }

    .btn-highscores {
        background: linear-gradient(to right, #ff4d4d, #990000);
        color: white;
        font-size: 1.2rem;
        font-weight: bold;
        padding: 15px 30px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        margin-top: 20px;
        box-shadow: 0 0 15px rgba(255, 0, 0, 0.7);
        transition: transform 0.3s, background 0.3s;
    }

    .btn-highscores:hover {
        transform: scale(1.1);
        background: linear-gradient(to right, #ff8080, #cc0000);
    }
</style>

@code {
    private string hostPlayerName = string.Empty;
    private string joinPlayerName = string.Empty;

    private void CreateGame()
    {
        var session = GameService.CreateGame(hostPlayerName);
        hostPlayerName = string.Empty;
        Navigation.NavigateTo($"/game/{session.SessionId}");
    }

    private void JoinGame(string gameId)
    {
        var session = GameService.JoinGame(gameId, joinPlayerName);
        joinPlayerName = string.Empty;
        if (session != null)
        {
            Navigation.NavigateTo($"/game/{session.SessionId}");
        }
    }

    private void GoToHighScores()
    {
        Navigation.NavigateTo("/highscores");
    }
}
