@page "/"
@using Logic
@inject NavigationManager Navigation

<div class="lobby-container">
    <h1 class="lobby-title">Game Lobby</h1>


    <div class="create-section">
        <h2>Create a New Game</h2>
        <div class="create-form">
            <input @bind="hostPlayerName" placeholder="Enter your name" class="input-name" />
            <button @onclick="CreateGame" class="btn-create">Create Game</button>
        </div>
    </div>

    <div class="available-section">
        <h2>Available Games</h2>
        @if (GameService.LobbyGames.Any())
        {
            <ul class="game-list">
                @foreach (var game in GameService.LobbyGames)
                {
                    <li class="game-item">
                        <div class="game-info">
                            <p><strong>Game ID:</strong> @game.SessionId</p>
                            <p><strong>Host:</strong> @game.Player1.Name</p>
                            <p><strong>Status:</strong> @(game.Player2 == null ? "Waiting for player..." : "Ready to start")</p>
                        </div>
                        @if (game.Player2 == null)
                        {
                            <input @bind="joinPlayerName" placeholder="Your name" class="input-name" />
                            <button @onclick="() => JoinGame(game.SessionId)" class="btn-join">Join</button>
                        }
                    </li>
                }
            </ul>
        }
        else
        {
            <p class="no-games-message">No games available in the lobby.</p>
        }
    </div>
</div>

<style>

.lobby-container {
    background: linear-gradient(to bottom right, #1e3c72, #2a5298);
    height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: #fff;
    font-family: Arial, sans-serif;
    padding: 20px;
}


.lobby-title {
    font-size: 48px;
    margin-bottom: 30px;
    text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.7);
    text-align: center;
}


.create-section {
    background-color: rgba(255, 255, 255, 0.2);
    padding: 20px;
    border-radius: 10px;
    text-align: center;
    margin-bottom: 30px;
    width: 100%;
    max-width: 400px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}

.create-section h2 {
    font-size: 24px;
    margin-bottom: 15px;
}

.create-form {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.input-name {
    padding: 10px;
    font-size: 16px;
    border-radius: 5px;
    border: none;
    width: 100%;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
}

.btn-create {
    background-color: #28a745;
    color: white;
    font-size: 18px;
    padding: 10px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: transform 0.2s, background-color 0.3s;
}

.btn-create:hover {
    background-color: #218838;
    transform: scale(1.1);
}


.available-section {
    background-color: rgba(255, 255, 255, 0.2);
    padding: 20px;
    border-radius: 10px;
    text-align: center;
    width: 100%;
    max-width: 600px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}

.available-section h2 {
    font-size: 24px;
    margin-bottom: 15px;
}

.game-list {
    list-style: none;
    padding: 0;
}

.game-item {
    background-color: rgba(0, 0, 0, 0.3);
    padding: 15px;
    border-radius: 8px;
    margin-bottom: 15px;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: left;
}

.game-info p {
    margin: 5px 0;
    font-size: 16px;
}

.no-games-message {
    font-size: 18px;
    color: #fff;
    opacity: 0.8;
}


.btn-join {
    background-color: #007bff;
    color: white;
    font-size: 18px;
    padding: 10px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: transform 0.2s, background-color 0.3s;
    margin-top: 10px;
}

.btn-join:hover {
    background-color: #0056b3;
    transform: scale(1.1);
}
</style>

@code {
    private string hostPlayerName = "";
    private string joinPlayerName = "";

    private void CreateGame()
    {
        var session = GameService.CreateGame(hostPlayerName);
        hostPlayerName = string.Empty;

        Navigation.NavigateTo($"/game/{session.SessionId}");
    }

    private void JoinGame(string gameId)
    {
        var session = GameService.JoinGame(gameId, joinPlayerName);
        joinPlayerName = string.Empty;

        if (session != null)
        {
            Navigation.NavigateTo($"/game/{session.SessionId}");
        }
    }
}
